// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onOpen={[Function]}
          onTransitionStart={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignContent": "center",
                          "backgroundColor": "#fff",
                          "flex": 1,
                          "justifyContent": "flex-start",
                          "top": 40,
                        }
                      }
                    >
                      <RCTSafeAreaView
                        emulateUnlessSupported={true}
                      >
                        <View
                          style={
                            Object {
                              "alignContent": "center",
                              "alignItems": "center",
                              "backgroundColor": "skyblue",
                              "flexDirection": "row",
                              "height": 50,
                            }
                          }
                        >
                          <Text
                            allowFontScaling={false}
                            onPress={[Function]}
                            style={
                              Array [
                                Object {
                                  "color": undefined,
                                  "fontSize": 20,
                                },
                                Object {
                                  "fontSize": 20,
                                  "paddingLeft": 10,
                                  "paddingRight": 20,
                                },
                                Object {
                                  "fontFamily": "FontAwesome5Free-Solid",
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                },
                                Object {
                                  "fontWeight": "900",
                                },
                              ]
                            }
                          >
                            ÔÅ†
                          </Text>
                          <Text
                            style={
                              Object {
                                "alignItems": "center",
                                "fontSize": 20,
                                "fontWeight": "bold",
                                "justifyContent": "center",
                                "paddingLeft": 10,
                                "textAlign": "center",
                              }
                            }
                          >
                            Login
                          </Text>
                        </View>
                        <View
                          style={
                            Object {
                              "padding": 20,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "paddingBottom": 20,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "fontSize": 16,
                                  "paddingBottom": 10,
                                }
                              }
                            >
                              Email address/Username: 
                            </Text>
                            <TextInput
                              allowFontScaling={true}
                              onChangeText={[Function]}
                              placeholder="Email Address/User name"
                              rejectResponderTermination={true}
                              style={
                                Object {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "height": 40,
                                  "padding": 5,
                                }
                              }
                              underlineColorAndroid="transparent"
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "paddingBottom": 20,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "fontSize": 16,
                                  "paddingBottom": 10,
                                }
                              }
                            >
                              Password: 
                            </Text>
                            <TextInput
                              allowFontScaling={true}
                              onChangeText={[Function]}
                              placeholder="Password"
                              rejectResponderTermination={true}
                              secureTextEntry={true}
                              style={
                                Object {
                                  "borderColor": "gray",
                                  "borderWidth": 1,
                                  "height": 40,
                                  "padding": 5,
                                }
                              }
                              underlineColorAndroid="transparent"
                              value=""
                            />
                          </View>
                          <View
                            accessibilityRole="button"
                            accessibilityState={Object {}}
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#007AFF",
                                      "fontSize": 18,
                                      "margin": 8,
                                      "textAlign": "center",
                                    },
                                  ]
                                }
                              >
                                Login
                              </Text>
                            </View>
                          </View>
                        </View>
                      </RCTSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;
